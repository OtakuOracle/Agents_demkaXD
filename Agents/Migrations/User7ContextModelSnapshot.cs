// <auto-generated />
using System;
using Agents.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agents.Migrations
{
    [DbContext(typeof(User7Context))]
    partial class User7ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Agents.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("address");

                    b.Property<int>("Agenttypeid")
                        .HasColumnType("integer")
                        .HasColumnName("agenttypeid");

                    b.Property<string>("Directorname")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("directorname");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("inn");

                    b.Property<string>("Kpp")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("kpp");

                    b.Property<string>("Logo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("logo");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<int>("Priority")
                        .HasColumnType("integer")
                        .HasColumnName("priority");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("agent_pkey");

                    b.HasIndex("Agenttypeid");

                    b.ToTable("agent", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Agentpriorityhistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Agentid")
                        .HasColumnType("integer")
                        .HasColumnName("agentid");

                    b.Property<DateTime>("Changedate")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("changedate");

                    b.Property<int>("Priorityvalue")
                        .HasColumnType("integer")
                        .HasColumnName("priorityvalue");

                    b.HasKey("Id")
                        .HasName("agentpriorityhistory_pkey");

                    b.HasIndex("Agentid");

                    b.ToTable("agentpriorityhistory", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Agenttype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("agenttype_pkey");

                    b.ToTable("agenttype", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("cost");

                    b.Property<int>("Countinpack")
                        .HasColumnType("integer")
                        .HasColumnName("countinpack");

                    b.Property<double?>("Countinstock")
                        .HasColumnType("double precision")
                        .HasColumnName("countinstock");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image");

                    b.Property<int>("Materialtypeid")
                        .HasColumnType("integer")
                        .HasColumnName("materialtypeid");

                    b.Property<double>("Mincount")
                        .HasColumnType("double precision")
                        .HasColumnName("mincount");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("unit");

                    b.HasKey("Id")
                        .HasName("material_pkey");

                    b.HasIndex("Materialtypeid");

                    b.ToTable("material", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Materialcounthistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Changedate")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("changedate");

                    b.Property<double>("Countvalue")
                        .HasColumnType("double precision")
                        .HasColumnName("countvalue");

                    b.Property<int>("Materialid")
                        .HasColumnType("integer")
                        .HasColumnName("materialid");

                    b.HasKey("Id")
                        .HasName("materialcounthistory_pkey");

                    b.HasIndex("Materialid");

                    b.ToTable("materialcounthistory", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Materialtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Defectedpercent")
                        .HasColumnType("double precision")
                        .HasColumnName("defectedpercent");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("materialtype_pkey");

                    b.ToTable("materialtype", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Articlenumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("articlenumber");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image");

                    b.Property<decimal>("Mincostforagent")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("mincostforagent");

                    b.Property<int?>("Productionpersoncount")
                        .HasColumnType("integer")
                        .HasColumnName("productionpersoncount");

                    b.Property<int?>("Productionworksshopnumber")
                        .HasColumnType("integer")
                        .HasColumnName("productionworksshopnumber");

                    b.Property<int?>("Producttypeid")
                        .HasColumnType("integer")
                        .HasColumnName("producttypeid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("product_pkey");

                    b.HasIndex("Producttypeid");

                    b.ToTable("product", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Productcosthistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Changedate")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("changedate");

                    b.Property<decimal>("Costvalue")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("costvalue");

                    b.Property<int>("Productid")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.HasKey("Id")
                        .HasName("productcosthistory_pkey");

                    b.HasIndex("Productid");

                    b.ToTable("productcosthistory", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Productmaterial", b =>
                {
                    b.Property<int>("Productid")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.Property<int>("Materialid")
                        .HasColumnType("integer")
                        .HasColumnName("materialid");

                    b.Property<double?>("Count")
                        .HasColumnType("double precision")
                        .HasColumnName("count");

                    b.HasKey("Productid", "Materialid")
                        .HasName("productmaterial_pkey");

                    b.HasIndex("Materialid");

                    b.ToTable("productmaterial", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Productsale", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("Agentid")
                        .HasColumnType("integer")
                        .HasColumnName("agentid");

                    b.Property<int>("Productcount")
                        .HasColumnType("integer")
                        .HasColumnName("productcount");

                    b.Property<int>("Productid")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.Property<DateOnly>("Saledate")
                        .HasColumnType("date")
                        .HasColumnName("saledate");

                    b.HasKey("Id")
                        .HasName("productsale_pkey");

                    b.HasIndex("Agentid");

                    b.HasIndex("Productid");

                    b.ToTable("productsale", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Producttype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("Defectedpercent")
                        .HasColumnType("double precision")
                        .HasColumnName("defectedpercent");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("producttype_pkey");

                    b.ToTable("producttype", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("address");

                    b.Property<int>("Agentid")
                        .HasColumnType("integer")
                        .HasColumnName("agentid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("shop_pkey");

                    b.HasIndex("Agentid");

                    b.ToTable("shop", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("inn");

                    b.Property<int?>("Qualityrating")
                        .HasColumnType("integer")
                        .HasColumnName("qualityrating");

                    b.Property<DateOnly>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<string>("Suppliertype")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("suppliertype");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("supplier_pkey");

                    b.ToTable("supplier", "agenty");
                });

            modelBuilder.Entity("Materialsupplier", b =>
                {
                    b.Property<int>("Materialid")
                        .HasColumnType("integer")
                        .HasColumnName("materialid");

                    b.Property<int>("Supplierid")
                        .HasColumnType("integer")
                        .HasColumnName("supplierid");

                    b.HasKey("Materialid", "Supplierid")
                        .HasName("materialsupplier_pkey");

                    b.HasIndex("Supplierid");

                    b.ToTable("materialsupplier", "agenty");
                });

            modelBuilder.Entity("Agents.Models.Agent", b =>
                {
                    b.HasOne("Agents.Models.Agenttype", "Agenttype")
                        .WithMany("Agents")
                        .HasForeignKey("Agenttypeid")
                        .IsRequired()
                        .HasConstraintName("fk_agent_agenttype");

                    b.Navigation("Agenttype");
                });

            modelBuilder.Entity("Agents.Models.Agentpriorityhistory", b =>
                {
                    b.HasOne("Agents.Models.Agent", "Agent")
                        .WithMany("Agentpriorityhistories")
                        .HasForeignKey("Agentid")
                        .IsRequired()
                        .HasConstraintName("fk_agentpriorityhistory_agent");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Agents.Models.Material", b =>
                {
                    b.HasOne("Agents.Models.Materialtype", "Materialtype")
                        .WithMany("Materials")
                        .HasForeignKey("Materialtypeid")
                        .IsRequired()
                        .HasConstraintName("fk_material_materialtype");

                    b.Navigation("Materialtype");
                });

            modelBuilder.Entity("Agents.Models.Materialcounthistory", b =>
                {
                    b.HasOne("Agents.Models.Material", "Material")
                        .WithMany("Materialcounthistories")
                        .HasForeignKey("Materialid")
                        .IsRequired()
                        .HasConstraintName("fk_materialcounthistory_material");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Agents.Models.Product", b =>
                {
                    b.HasOne("Agents.Models.Producttype", "Producttype")
                        .WithMany("Products")
                        .HasForeignKey("Producttypeid")
                        .HasConstraintName("fk_product_producttype");

                    b.Navigation("Producttype");
                });

            modelBuilder.Entity("Agents.Models.Productcosthistory", b =>
                {
                    b.HasOne("Agents.Models.Product", "Product")
                        .WithMany("Productcosthistories")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("fk_productcosthistory_product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Agents.Models.Productmaterial", b =>
                {
                    b.HasOne("Agents.Models.Material", "Material")
                        .WithMany("Productmaterials")
                        .HasForeignKey("Materialid")
                        .IsRequired()
                        .HasConstraintName("fk_productmaterial_material");

                    b.HasOne("Agents.Models.Product", "Product")
                        .WithMany("Productmaterials")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("fk_productmaterial_product");

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Agents.Models.Productsale", b =>
                {
                    b.HasOne("Agents.Models.Agent", "Agent")
                        .WithMany("Productsales")
                        .HasForeignKey("Agentid")
                        .IsRequired()
                        .HasConstraintName("fk_productsale_agent");

                    b.HasOne("Agents.Models.Product", "Product")
                        .WithMany("Productsales")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("fk_productsale_product");

                    b.Navigation("Agent");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Agents.Models.Shop", b =>
                {
                    b.HasOne("Agents.Models.Agent", "Agent")
                        .WithMany("Shops")
                        .HasForeignKey("Agentid")
                        .IsRequired()
                        .HasConstraintName("fk_shop_agent");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Materialsupplier", b =>
                {
                    b.HasOne("Agents.Models.Material", null)
                        .WithMany()
                        .HasForeignKey("Materialid")
                        .IsRequired()
                        .HasConstraintName("fk_materialsupplier_material");

                    b.HasOne("Agents.Models.Supplier", null)
                        .WithMany()
                        .HasForeignKey("Supplierid")
                        .IsRequired()
                        .HasConstraintName("fk_materialsupplier_supplier");
                });

            modelBuilder.Entity("Agents.Models.Agent", b =>
                {
                    b.Navigation("Agentpriorityhistories");

                    b.Navigation("Productsales");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("Agents.Models.Agenttype", b =>
                {
                    b.Navigation("Agents");
                });

            modelBuilder.Entity("Agents.Models.Material", b =>
                {
                    b.Navigation("Materialcounthistories");

                    b.Navigation("Productmaterials");
                });

            modelBuilder.Entity("Agents.Models.Materialtype", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Agents.Models.Product", b =>
                {
                    b.Navigation("Productcosthistories");

                    b.Navigation("Productmaterials");

                    b.Navigation("Productsales");
                });

            modelBuilder.Entity("Agents.Models.Producttype", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
